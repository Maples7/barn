# Your information to render pages
## All key-value pairs can be used in html template of some theme specified in `config.yml`
## See https://github.com/Maples7/barn to catch more

pageTitle: Resume of LiQi | maples7.com
head_pic: image/head.jpg
icon: image/favicon.ico
name: Li Qi
title: Back-End Web Developer

profile:
  - I'm a back-end web developer who has a passion for coding. For now I mainly concentrate on Node.js tech stack, but can also share some coding experience on PHP and Python. Moreover, Erlang/Elixir attracts me recently. I love study new tech and have a regular custom to learn from outstanding tech blogs and create my own.
  - I'm very positive about open source and would research how to implement it or just "make the wheel" when I got some good ideas. In high school, I used to attend the NOIP (National Olympiad in Informatics in Provinces) and win the 2rd prize, which lays a solid foundation for my knowledge about Data Structure and Algorithm.
  - Now, I'd like to get a chance to work as a back-end web developer in a great company.

education:
  2012.9 - 2016.6: Shandong University - Electric Engineering and Automation(Excellence Program) - Bachelor

contact:
  Email: maples7@163.com
  Phone: 183*******9
  WeChat: maples7_lq
  Location: Beijing, China

others:
  GitHub: github.com/Maples7
  Blog: maples7.com
  Zhihu: zhihu.com/people/maples7
  LinkedIn: linkedin.com/in/maples7/
  Resume: cv.maples7.com
  English Level: CET-6

# optional
chinese_version: cv.maples7.com

work_exprience:
  - company_name: Duoyi Network
    job_position: Back-End Web Developer
    from: 2016.3/4/7
    to: 2017.5
    content: For now I mainly work as a back-end web developer with Node.js tech stack, which involves Express/Koa framework, MySQL, MongoDB, Redis and so on. I also used to briefly build front-end user interface with Vue.js. In other projects, PHP and .NET Core are required for me to work with to build applications. In general, I'm a back-end guy.
    list:
      Game BBS:
        # link: https://bbs.duoyi.com/
        content: Tag and Activity modules are under my responsibility while in building process. And nowadays I have took full responsibility for this project <em>alone</em>, which means <em>a serial of integrated jobs in process pipeline from code to running online including implementation of new demands, routine maintenance, deployment on servers, publish of new version, performance optimization and more</em>. This project is based on Express, MySQL and Redis and consists of 2 parts —— service in user side handles pages' logic and rendering and the one in server side only provides JSON data with pure RESTful APIs for front-end and mobile end. This project brings me a deeper thought about <em>document system, automated testing, log system, standard return format, MVC layer architecture and how to use cache</em>.
      Email Detector:
        content: With Vue, Koa and MySQL, this comes to be a detector of whether the email service in our company does work well with other email services. By making rules backstage, this service sends emails to other email services through API and try to receive them under IMAP protocol after a while. That IMAP part was my cake while building and I take full responsibility for this project nowadays, too.
      Account Center:
        content: It's an account center built on old-version PHP who manages all accounts of games and other applications. I meddle in several parts of it on new needs and data analysis.

# `link` in each key is optional
personal_work:
  barn:
    link: https://github.com/Maples7/barn
    content: A CLI tool which generates and deploy resumes on Github Pages automatically. Exactly like resume-version Hexo. Needless to say, this resume is generated by this tool.
  express-mount-routes:
    link: https://github.com/Maples7/express-mount-routes
    content: An Express package to load routes and controllers automatically from file system. Why? CoC(Configuration over Convention)!
  express-final-response:
    link: https://github.com/Maples7/express-final-response
    content: The very last middleware of Express to handle every response of every request. JSON or HTML response and error handling are all supported synchronously.

skill:
  Node.js / C / Git: 90%
  PHP / Python / C++: 70%
  HTML / Erlang / Shell: 50%
  CSS / C#: 30%
